{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactForm/ContactForm.module.css","UI/Layout/Layout.style.js","UI/Layout/Layout.jsx","UI/SectionWrap/SectionWrap.style.js","UI/SectionWrap/SectionWrap.jsx","UI/Button/Button.style.js","UI/Button/Button.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","hooks/useLocalStorage.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Container","styled","div","Layout","children","Section","Title","h3","SectionWrap","title","Btn","button","Button","onClick","defaultProps","ContactForm","onAdd","onCheckUnique","uid","useUIDSeed","useForm","register","handleSubmit","errors","formState","useState","name","setName","phone","setPhone","handleChangeForm","target","value","onSubmit","data","alert","id","console","log","className","css","input","type","placeholder","required","pattern","onChange","ContactListItem","onRemove","item","span","ContactList","contacts","map","key","Filter","filter","label","labelText","App","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","testContacts","setContacts","setFilter","newContact","prevState","isExistContact","find","contact","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abba3df3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__aOnVa\",\"labelText\":\"Filter_labelText__3hRF9\",\"input\":\"Filter_input__3Squ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1oXW9\"};","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  @media (max-width: 1283px) {\r\n    width: 940px;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    width: 700px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 520px;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n","import { Container } from './Layout.style';\r\nimport React from 'react';\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nexport default Layout;\r\n","import styled from 'styled-components';\r\n\r\nexport const Section = styled.div`\r\n    padding-top: 35px;\r\n    padding-bottom: 35px;\r\n    background-color: #fff;\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n    border-radius: 7px;\r\n    box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\r\n    border: 1px solid rgba(128, 128, 128, 0.4);\r\n    margin-bottom: 30px;\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n    margin-bottom: 15px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Section, Title } from './SectionWrap.style';\r\n\r\nconst SectionWrap = ({ title, children }) => (\r\n    <Section>\r\n        {title && <Title>{title}</Title>}\r\n        {children}\r\n    </Section>\r\n);\r\n\r\nSectionWrap.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default SectionWrap;\r\n","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n    cursor: pointer;\r\n    color: #7366ff;\r\n    font-weight: 500;\r\n    padding: 10px 15px;\r\n    border-radius: 5px;\r\n    background-color: rgba(115, 102, 255, 0.15);\r\n    transition: all 0.3s ease;\r\n\r\n    display: inline-block;\r\n    margin: 0 10px;\r\n    padding: 10px;\r\n    min-width: 120px;\r\n    background-color: #30d5c8;\r\n    color: #ffffff;\r\n    font-weight: 700;\r\n    font-size: 14px;\r\n    letter-spacing: 0.02em;\r\n    text-align: center;\r\n    text-transform: uppercase;\r\n    border-radius: 4px;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\r\n    border: none;\r\n    cursor: pointer;\r\n    transition-property: color, background-color, box-shadow;\r\n    transition-duration: 250ms;\r\n    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n    &:hover,\r\n    &:focus {\r\n        color: #fff;\r\n        background-color: #7366ff;\r\n\r\n        color: #30d5c8;\r\n        background-color: #ffffff;\r\n        box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1),\r\n            0px 1px 2px rgba(0, 0, 0, 0.08), 0px 2px 2px rgba(0, 0, 0, 0.12);\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Btn } from './Button.style';\r\n\r\nconst Button = ({ children, onClick }) => (\r\n    <Btn onClick={onClick}>{children}</Btn>\r\n);\r\n\r\nButton.defaultProps = {\r\n    children: '',\r\n};\r\n\r\nButton.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useUIDSeed } from 'react-uid';\nimport { Button } from 'UI/Button';\nimport css from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\nexport function ContactForm({ onAdd, onCheckUnique }) {\n    const uid = useUIDSeed();\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n    } = useForm();\n\n    const [name, setName] = useState('');\n    const [phone, setPhone] = useState('');\n\n    const handleChangeForm = ({ target }) => {\n        const { name, value } = target;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'phone':\n                setPhone(value);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const resetForm = () => {\n        setName('');\n        setPhone('');\n    };\n\n    function validateForm() {\n        if (!name || !phone) {\n            alert('Some field is empty');\n            return false;\n        }\n        return onCheckUnique(name);\n    }\n    const onSubmit = data => {\n        const isValidateForm = validateForm();\n        if (!isValidateForm) return;\n        onAdd({ id: uid(data), name, phone });\n        resetForm();\n        console.log('Submit', data, errors);\n    };\n    return (\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <input\n                className={css.input}\n                type=\"text\"\n                // name=\"name\"\n                placeholder=\"Enter name\"\n                {...register('name', {\n                    required: true,\n                    pattern:\n                        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n                })}\n                value={name}\n                required\n                onChange={handleChangeForm}\n            />\n            {errors.name && alert('Name is required.')}\n\n            <input\n                className={css.input}\n                type=\"tel\"\n                // name=\"phone\"\n                placeholder=\"Enter phone number\"\n                {...register('phone', {\n                    required: true,\n                    pattern:\n                        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n                })}\n                value={phone}\n                required\n                onChange={handleChangeForm}\n            />\n            {errors.phone && alert('Please enter number for phone.')}\n\n            <Button type=\"submit\">Add Contact</Button>\n        </form>\n    );\n}\n\nContactForm.propTypes = {\n    onAdd: PropTypes.func.isRequired,\n    onCheckUnique: PropTypes.func.isRequired,\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'UI/Button';\r\n\r\nimport css from './ContactList.module.css';\r\n\r\nconst ContactListItem = ({ name, phone, onRemove }) => {\r\n    return (\r\n        <li className={css.item}>\r\n            <span className={css.span}>\r\n                {name}:{phone}\r\n            </span>\r\n            <Button className=\"btn\" onClick={onRemove}>\r\n                Delete\r\n            </Button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport const ContactList = ({ contacts, onRemove }) => {\r\n    console.log(contacts);\r\n    return (\r\n        <ul className={css.contacts}>\r\n            {contacts?.map(({ id, name, phone }) => (\r\n                <ContactListItem\r\n                    key={id}\r\n                    name={name}\r\n                    phone={phone}\r\n                    onRemove={() => onRemove(id)}\r\n                />\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.node.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            phone: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n    onRemove: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Filter.module.scss';\r\n\r\nexport const Filter = ({ filter, onChange }) => {\r\n    return (\r\n        <label className={css.label}>\r\n            <span className={css.labelText}>Find contacts by name</span>\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={filter}\r\n                onChange={({ target }) => onChange(target.value)}\r\n                placeholder=\"Enter name for Search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                className={css.input}\r\n            />\r\n        </label>\r\n    );\r\n};\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Layout } from 'UI/Layout';\r\nimport { SectionWrap } from 'UI/SectionWrap';\r\nimport { ContactForm } from 'components/ContactForm';\r\nimport { ContactList } from 'components/ContactList';\r\nimport { Filter } from 'components/Filter';\r\nimport useLocalStorage from 'hooks/useLocalStorage';\r\nimport testContacts from 'server/contacts.json';\r\n\r\nexport default function App() {\r\n    const [contacts, setContacts] = useLocalStorage('contacts', testContacts);\r\n    const [filter, setFilter] = useState('');\r\n    const handleAddContact = newContact => {\r\n        setContacts(prevState => [...prevState, newContact]);\r\n    };\r\n\r\n    const handleCheckUniqueContact = name => {\r\n        const isExistContact = !!contacts.find(\r\n            contact => contact.name === name,\r\n        );\r\n        isExistContact && alert('Contact is already exist');\r\n        return !isExistContact;\r\n    };\r\n\r\n    const handleRemoveContact = id =>\r\n        setContacts(contacts.filter(contact => contact.id !== id));\r\n\r\n    const handleChangeFilter = filter => setFilter(filter);\r\n\r\n    const getVisibleContacts = () => {\r\n        return contacts.filter(contact =>\r\n            contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout>\r\n            <SectionWrap title=\"Phonebook\">\r\n                <ContactForm\r\n                    onAdd={handleAddContact}\r\n                    onCheckUnique={handleCheckUniqueContact}\r\n                />\r\n            </SectionWrap>\r\n\r\n            <SectionWrap title=\"Contact List\">\r\n                <Filter filter={filter} onChange={handleChangeFilter} />\r\n                <ContactList\r\n                    contacts={getVisibleContacts()}\r\n                    onRemove={handleRemoveContact}\r\n                />\r\n            </SectionWrap>\r\n        </Layout>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n    // console.log(defaultValue);\r\n    const [state, setState] = useState(\r\n        () => JSON.parse(window.localStorage.getItem(key)) ?? defaultValue,\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n\r\n    return [state, setState];\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Vz0N\",\"span\":\"ContactList_span__3uitx\"};"],"sourceRoot":""}