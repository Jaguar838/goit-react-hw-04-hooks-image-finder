{"version":3,"sources":["components/ImageGalleryList/ImageGalleryList.module.scss","UI/Modal/Modal.module.css","UI/Spinner/Spinner.module.scss","components/ImageGallery/ImageGallery.module.scss","components/Searchbar/Searchbar.module.scss","UI/Layout/Layout.style.js","UI/Layout/Layout.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryList/ImageGalleryList.jsx","utils/apiService.js","UI/Spinner/Spinner.jsx","UI/Button/Button.style.js","UI/Button/Button.jsx","UI/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Container","styled","div","Layout","children","Searchbar","onSubmit","useState","query","setQuery","resetSearch","className","css","evt","preventDefault","value","target","trim","toast","error","position","SearchForm","type","SearchForm_button","SearchForm_button_label","SearchForm_input","placeholder","onChange","ImageGalleryItem","webformatURL","tags","largeImageURL","modalImage","ImageGalleryItem_image","src","alt","onClick","ImageGalleryList","images","map","id","onClickImg","axios","defaults","baseURL","params","key","image_type","orientation","per_page","fetchImg","a","currentPage","get","q","data","hits","Spinner","color","height","width","timeout","Btn","button","Button","isLoading","visible","modalRoot","document","querySelector","Modal","onCloseModal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","backdrop","currentTarget","modal","ImageGallery","state","showModal","showButton","fetchImages","console","log","options","props","setState","then","prevState","catch","err","finally","toggleModal","handleModalImage","url","prevProps","this","scrollTo","top","documentElement","scrollHeight","behavior","length","Error","Component","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ebf296e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryList\":\"ImageGalleryList_ImageGalleryList__2ZKQI\",\"ImageGalleryItem\":\"ImageGalleryList_ImageGalleryItem__2HSqS\",\"ImageGalleryItem_image\":\"ImageGalleryList_ImageGalleryItem_image__mwrlz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__U-xdH\",\"modal\":\"Modal_modal__2aq0n\",\"Overlay\":\"Modal_Overlay__UP63s\",\"Modal\":\"Modal_Modal__2NkQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__2W5v2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Error\":\"ImageGallery_Error__2up49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2RTIg\",\"SearchForm\":\"Searchbar_SearchForm__1TDko\",\"SearchForm_button\":\"Searchbar_SearchForm_button__2NVhl\",\"SearchForm-button\":\"Searchbar_SearchForm-button__1uTfc\",\"SearchForm_button_label\":\"Searchbar_SearchForm_button_label__Ia4tE\",\"SearchForm_input\":\"Searchbar_SearchForm_input__3y-De\"};","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  width: 1280px;\r\n  margin: 0 auto;\r\n  padding: 0 20px;\r\n\r\n  @media (max-width: 1283px) {\r\n    width: 940px;\r\n  }\r\n\r\n  @media (max-width: 992px) {\r\n    width: 700px;\r\n  }\r\n\r\n  @media (max-width: 768px) {\r\n    width: 520px;\r\n  }\r\n\r\n  @media (max-width: 576px) {\r\n    width: 90%;\r\n  }\r\n`;\r\n","import { Container } from './Layout.style';\r\nimport React from 'react';\r\n\r\nconst Layout = ({ children }) => <Container>{children}</Container>;\r\n\r\nexport default Layout;\r\n","import React, { useState } from 'react';\n\nimport css from './Searchbar.module.scss';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const Searchbar = ({ onSubmit }) => {\n    const [query, setQuery] = useState('');\n\n    const handleChangeSearch = ({ target }) => {\n        setQuery(target.value);\n    };\n\n    const handleSubmit = evt => {\n        evt.preventDefault();\n        const { value } = evt.target;\n        if (query.trim() === '') {\n            toast.error('Введите поисковый запрос', {\n                position: 'top-center',\n            });\n            return;\n        }\n        onSubmit(value);\n        resetSearch();\n    };\n\n    const resetSearch = () => {\n        setQuery('');\n    };\n\n    return (\n        <header className={css.Searchbar}>\n            <form onSubmit={handleSubmit} className={css.SearchForm}>\n                <button type=\"submit\" className={css.SearchForm_button}>\n                    <span className={css.SearchForm_button_label}>Search</span>\n                </button>\n                <input\n                    className={css.SearchForm_input}\n                    type=\"text\"\n                    placeholder=\"Search images and photos\"\n                    onChange={handleChangeSearch}\n                    value={query}\n                />\n            </form>\n            <Toaster />\n        </header>\n    );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport css from './ImageGalleryList.module.scss';\n\nconst ImageGalleryItem = ({\n    webformatURL,\n    tags,\n    largeImageURL,\n    modalImage,\n}) => {\n    return (\n        <li className={css.ImageGalleryItem}>\n            <img\n                className={css.ImageGalleryItem_image}\n                src={webformatURL}\n                alt={tags}\n                data-source={largeImageURL}\n                onClick={modalImage}\n            />\n        </li>\n    );\n};\n\nconst ImageGalleryList = ({ images, modalImage }) => {\n    return (\n        <ul className={css.ImageGalleryList}>\n            {images?.map(({ id, webformatURL, tags, largeImageURL }) => (\n                <ImageGalleryItem\n                    key={id}\n                    webformatURL={webformatURL}\n                    tags={tags}\n                    largeImageURL={largeImageURL}\n                    onClickImg={modalImage}\n                />\n            ))}\n        </ul>\n    );\n};\n\nImageGalleryList.propTypes = {\n    images: PropTypes.array.isRequired,\n    modalImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryList;\n","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://pixabay.com/api';\r\naxios.defaults.params = {\r\n    key: '21828776-3a3234db6b008ce4834511463',\r\n    image_type: 'photo',\r\n    orientation: 'horizontal',\r\n    per_page: 12,\r\n};\r\n\r\nconst fetchImg = async ({ query = '', currentPage = 1 }) => {\r\n    const { data } = await axios.get('', {\r\n        params: { q: query, currentPage },\r\n    });\r\n    return data.hits;\r\n};\r\n\r\nexport default fetchImg;\r\n","import Loader from 'react-loader-spinner';\r\nimport css from './Spinner.module.scss';\r\nconst Spinner = () => (\r\n    <div className={css.Spinner}>\r\n        <Loader\r\n            type=\"Hearts\"\r\n            color=\"#3f51b5\"\r\n            height={200}\r\n            width={200}\r\n            timeout={10000}\r\n        />\r\n    </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import styled from 'styled-components';\r\n\r\nexport const Btn = styled.button`\r\n     {\r\n        padding: 8px 16px;\r\n        border-radius: 2px;\r\n        background-color: #3f51b5;\r\n        transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n        text-align: center;\r\n        display: block;\r\n        color: #fff;\r\n        border: 0;\r\n        text-decoration: none;\r\n        cursor: pointer;\r\n        font-family: inherit;\r\n        font-size: 18px;\r\n        line-height: 24px;\r\n        font-style: normal;\r\n        font-weight: 500;\r\n        width: 100%;\r\n        box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n            0px 2px 2px 0px rgba(0, 0, 0, 0.14),\r\n            0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n        margin-left: auto;\r\n        margin-right: auto;\r\n    }\r\n\r\n    &:hover,\r\n    &:focus {\r\n        background-color: #303f9f;\r\n    }\r\n`;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\nimport { Btn } from './Button.style';\r\n\r\nconst Button = ({ onClick, isLoading }) => (\r\n    <Btn onClick={onClick}>\r\n        <Loader\r\n            type=\"TailSpin\"\r\n            color=\"#00BFFF\"\r\n            height={20}\r\n            width={20}\r\n            visible={isLoading}\r\n        />\r\n        {isLoading ? '' : 'Load more'}\r\n    </Btn>\r\n);\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    isLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport css from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nconst Modal = ({ onCloseModal, children }) => {\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    });\r\n\r\n    const handleKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            onCloseModal();\r\n        }\r\n    };\r\n\r\n    const handleBackdropClick = e => {\r\n        if (e.target === e.currentTarget) {\r\n            onCloseModal();\r\n        }\r\n    };\r\n\r\n    return createPortal(\r\n        <div className={css.backdrop} onClick={handleBackdropClick}>\r\n            <div className={css.modal}>{children}</div>\r\n        </div>,\r\n        modalRoot,\r\n    );\r\n};\r\n\r\nModal.propTypes = {\r\n    onCloseModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport ImageGalleryList from '../ImageGalleryList';\nimport fetchImg from 'utils/apiService';\nimport { Spinner } from 'UI/Spinner';\nimport { Button } from 'UI/Button';\nimport { Modal } from 'UI/Modal';\n\nimport css from './ImageGallery.module.scss';\n\nexport class ImageGallery extends Component {\n    state = {\n        images: [],\n        currentPage: 1,\n        isLoading: false,\n        error: null,\n        showModal: false,\n        largeImageURL: null,\n        showButton: false,\n    };\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.query !== this.props.query) {\n            this.setState({ currentPage: 1, images: [], error: null }, () =>\n                this.fetchImages(),\n            );\n        }\n\n        if (prevState.currentPage !== this.state.currentPage) {\n            window.scrollTo({\n                top: document.documentElement.scrollHeight,\n                behavior: 'smooth',\n            });\n        }\n    }\n\n    fetchImages = () => {\n        console.log('fetchImages');\n        const { currentPage } = this.state;\n        console.log(currentPage, 'currentPage');\n        const { query } = this.props;\n        const options = {\n            query,\n            currentPage,\n        };\n\n        this.setState({ isLoading: true });\n\n        fetchImg(options)\n            .then(images =>\n                this.setState(prevState => ({\n                    images: [...prevState.images, ...images],\n                    currentPage: prevState.currentPage + 1,\n                })),\n            )\n            .catch(err => this.setState({ err }))\n            .finally(() => this.setState({ isLoading: false }));\n    };\n\n    toggleModal = () => {\n        this.setState(({ showModal }) => ({ showModal: !showModal }));\n        this.setState({ largeImageURL: null });\n    };\n\n    handleModalImage = url => {\n        this.toggleModal();\n        this.setState({ largeImageURL: url });\n    };\n\n    render() {\n        const { showModal, images, error, isLoading, largeImageURL } =\n            this.state;\n        const showButton = images.length > 0;\n        return (\n            <>\n                {isLoading && <Spinner />}\n                {error && <h2>{error}</h2>}\n                {error && <p className={css.Error}>{error}</p>}\n                <ImageGalleryList\n                    images={images}\n                    modalImage={this.handleModalImage}\n                />\n                {showButton && (\n                    <Button\n                        onClick={this.fetchImages}\n                        isLoading={isLoading}\n                    ></Button>\n                )}\n\n                {showModal && (\n                    <Modal onCloseModal={this.toggleModal}>\n                        <img src={largeImageURL} alt=\"\" />\n                    </Modal>\n                )}\n            </>\n        );\n    }\n}\n","import React, { useState } from 'react';\n\nimport { Layout } from 'UI/Layout';\nimport { Searchbar } from 'components/Searchbar';\nimport { ImageGallery } from 'components/ImageGallery';\n\nexport default function App() {\n    const [query, setQuery] = useState('');\n\n    const handleSubmitSearchbar = query => {\n        setQuery(query);\n    };\n    return (\n        <Layout>\n            <Searchbar onSubmit={handleSubmitSearchbar} />\n            <ImageGallery query={query} />\n        </Layout>\n    );\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}